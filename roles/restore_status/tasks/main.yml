---

- name: Ensure log path is set for each host
  debug:
    msg: "Log path for {{ inventory_hostname }} is {{ hosts_cofig[inventory_hostname].log_path }}"

- name: Daily Monitor Logs DR PE restore log status
  ansible.builtin.shell: |
    if [ -f "{{ log_path }}" ]; then
      tail "{{ log_path }}" | grep "$(date +%Y/%m/%d)"
    else
      echo "Log file does not exist"
    fi
  ignore_errors: yes
  register: all_logs

# Step 3: Check for errors in logs
- name: Identify errors in logs
  ansible.builtin.set_fact:
    logs_status: >-
      {% if not all_logs.stdout_lines %}
      no logs found
      {% elif 'error' in (all_logs.stdout_lines | join(' ') | lower) %}
      not ok
      {% elif 'fail' in (all_logs.stdout_lines | join(' ') | lower) %}
      not ok
      {% elif 'exception' in (all_logs.stdout_lines | join(' ') | lower) %}
      not ok
      {% else %}
      ok
      {% endif %}
  delegate_to: localhost

- name: Append logs with CET time
  ansible.builtin.shell: |
    echo -e "**DR PE** {{ ansible_date_time.iso8601 }} CET" >> /tmp/all_logs_collected.txt
    echo -e "**Status** {{ logs_status }} CET" >> /tmp/all_logs_collected.txt
    if [ -z "{{ all_logs.stdout_lines | join('') }}" ]; then
      echo -e "No logs collected as of {{ ansible_date_time.iso8601 }} CET" >> /tmp/all_logs_collected.txt
    else
      echo -e "{{ all_logs.stdout_lines | join('\n') }}" >> /tmp/all_logs_collected.txt
    fi
    echo -e "End of logs from {{ inventory_hostname }}\n" >> /tmp/all_logs_collected.txt
  delegate_to: localhost

# Step 5: Display the collected logs
- name: Display the collected logs
  ansible.builtin.command: cat /tmp/all_logs_collected.txt
  delegate_to: localhost
  register: consolidated_logs
  run_once: true

# Step 4: Collect the status and logs for each host in a list
- name: Create a list of logs and statuses
  ansible.builtin.set_fact:
    email_body: "{{ logs_and_statuses | default([]) + [{'host': inventory_hostname, 'logs_status': logs_status, 'logs': consolidated_logs.stdout_lines }] }}"
  delegate_to: localhost
