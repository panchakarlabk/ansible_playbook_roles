
---
- name: Display the collected alerts
  ansible.builtin.command: cat data.json 
  delegate_to: localhost
  register: json_content
  run_once: true

- name: Debug parsed data structure
  debug:
    var: json_content.stdout

- name: Parse JSON content
  set_fact:
    parsed_json: "{{ json_content.stdout | from_json | json_query('parse_data.items') }}"

- name: Filter relevant alerts
  set_fact:
    all_alerts: "{{ parsed_json | list }}"

- name: Gather all ignore conditions for monitorObjectName and resourceTemplateName
  set_fact:
    ignore_conditions: "{{ ignore_alerts_rules | map(attribute='ignore_if') | list | flatten }}"

- name: Debug ignore conditions
  debug:
    var: ignore_conditions

- name: Filter relevant alerts
  set_fact:
    relevant_alerts_ignore: >
      {{
        parsed_json
        | rejectattr('monitorObjectName', 'in', ignore_conditions | selectattr('monitorObjectName', 'defined') | map(attribute='monitorObjectName') | flatten)
        | rejectattr('resourceTemplateName', 'in', ignore_conditions | selectattr('resourceTemplateName', 'defined') | map(attribute='resourceTemplateName') | flatten)
        | list
      }}

- name: Display filtered alerts
  debug:
    var: relevant_alerts

- name: Append epoch time from groups.date
  set_fact:
    epoch_times: "{{ (item.SDT.startDateTime | int ) if (item.SDT.startDateTime is defined and 'startDateTime' in item.SDT) else None  }}"
  loop: "{{ parsed_json }}"
  when: item.SDT is defined

- name: Extract human-readable time from epoch times
  set_fact:
    time_fact: "{{ '%H:%M:%S' | strftime(epoch_times) }}"

- name: Extract human-readable date from epoch times
  set_fact:
    date_fact: "{{ '%Y-%m-%d' | strftime(epoch_times) }}"

- name: Check if logicmonitor_status is successful
  debug:
    msg: "LogicMonitor status completed successfully."
  register: logicmonitor_status_result


# - name: Display relevant alerts
#   debug:
#     msg: >
#       Ask Comment: {{ item.askComment }}
#       Monitor Object Name: {{ item.monitorObjectName }}
#       Resource Template Name: {{ item.resourceTemplateName }}
#   with_items: "{{ relevant_alerts }}"

# - name: Convert epoch times to human-readable format
#   set_fact:
#     updated_items: >-
#       {{ parse_data.items | map('combine', {
#         'groups': {
#           'date': (item.groups.date | default(0) | string | to_datetime('%Y-%m-%d %H:%M:%S'))
#         }
#       }) | list }}

# - name: Debug updated items
#   debug:
#     var: updated_items

# - name: Prepare filtered alerts for logging with current date
#   set_fact:
#     logic_monitor_email_body: |
#       | Date                 | Ask Comment  | Monitor Object Name   | Resource Template Name  |
#       |----------------------|--------------|-----------------------|-------------------------|
#       {% for item in relevant_alerts %}
#       | {{ ansible_date_time.iso8601 }} | {{ item.askComment | default('') }}{{ ' ' * (12 - item.askComment | length) }} | {{ item.monitorObjectName | default('') }}{{ ' ' * (21 - item.monitorObjectName | length) }} | {{ item.resourceTemplateName | default('') }}{{ ' ' * (23 - item.resourceTemplateName | length) }} |
#       {% endfor %}
#  when: relevant_alerts | length > 0

# - name: Prepare filtered alerts for email in HTML table format
#   set_fact:
#     logic_monitor_email_body: |
#       <html>
#         <head>
#           <style>
#             table {
#               width: 100%;
#               border-collapse: collapse;
#               font-family: Arial, sans-serif;
#               font-size: 14px;
#             }
#             th, td {
#               border: 1px solid #dddddd;
#               text-align: left;
#               padding: 8px;
#             }
#             th {
#               background-color: #f2f2f2;
#             }
#             tr:nth-child(even) {
#               background-color: #f9f9f9;
#             }
#           </style>
#         </head>
#         <body>
#           <p>Here are the filtered alerts:</p>
#           <table>
#             <thead>
#               <tr>
#                 <th>Date</th>
#                 <th>Ask Comment</th>
#                 <th>Monitor Object Name</th>
#                 <th>Resource Template Name</th>
#               </tr>
#             </thead>
#             <tbody>
#               {% for item in relevant_alerts %}
#               <tr>
#                 <td>{{ ansible_date_time.iso8601 }}</td>
#                 <td>{{ item.askComment | default('') }}</td>
#                 <td>{{ item.monitorObjectName | default('') }}</td>
#                 <td>{{ item.resourceTemplateName | default('') }}</td>
#               </tr>
#               {% endfor %}
#             </tbody>
#           </table>
#         </body>
#       </html>
#   when: relevant_alerts | length > 0
