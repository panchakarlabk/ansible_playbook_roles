---

- name: Get human-readable datetime
  ansible.builtin.command: date "+%Y-%m-%d %H:%M:%S"
  register: datetime_output
  delegate_to: localhost

- name: Set log path for each host dynamically
  set_fact:
    host_log_path: "{{ item.0.config.log_path | default(omit) }}"
    tail_log: "{{ item.0.tail | default(omit) }}" 
    log_files_to_collect: "{{ item.0.config.log_files_to_collect | default([]) }}"
  with_subelements:
    - "{{ lookup('vars', 'dba_automation_' + env) | dict2items | map(attribute='value') | list }}"
    - hosts
  when: inventory_hostname is match(item.1 | replace('*', '.*'))
  delegate_to: localhost

- name: Verify Oracle log files exist
  ansible.builtin.stat:
    path: "{{ host_log_path }}/{{ item }}"
  register: log_file_status
  loop: "{{ log_files_to_collect }}"
  loop_control:
    label: "{{ item }}"
  when: log_files_to_collect | length > 0  # Only run if log_files_to_collect is not empty

- name: Read and display content of each log file
  ansible.builtin.shell: |
    cat {{ host_log_path }}/{{ item.item }}
  register: consolidated_logs
  with_items: "{{ log_file_status.results }}"
  changed_when: false

- name: Display combined log file contents
  ansible.builtin.debug:
    msg: consolidated_logs.results
  delegate_to: localhost
  run_once: true

- name: Display combined log file contents
  ansible.builtin.debug:
    msg: |
      Logs from {{ inventory_hostname }}:
      {% for log in consolidated_logs.results %}
      - File: {{ log.item.item }}
        Content:
        {{ log.stdout }}
      {% endfor %}
  run_once: true
  delegate_to: localhost

- name: Intialize restore_logs
  ansible.builtin.set_fact:
    restore_logs: []
  delegate_to: localhost
  run_once: true

# Step 4: Collect the status and logs for each host in a list
- name: Create a list of logs and statuses
  ansible.builtin.set_fact:
    restore_logs: "{{ [{'host': inventory_hostname, 'logs_status': logs_status, 'logs': consolidated_logs.results }] }}"
  when: 
    - logs_status is defined
    - consolidated_logs is defined
    - consolidated_logs.stdout_lines is defined
  delegate_to: localhost
  run_once: true

- name: Set restore_status_result 
  ansible.builtin.set_fact:
    restore_status_result:
      success: true
      message: "Restore status completed successfully."

- name: restore_status_result Variable
  debug:
    var: restore_status_result
