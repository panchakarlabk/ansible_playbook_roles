- name: Identify errors in logs oracle
  ansible.builtin.set_fact:
    logs_status: >-
      {% if not oracle_log.stdout_lines %}
      no logs found
      {% elif 'error' in (oracle_log.stdout_lines | join(' ') | lower) %}
      not ok
      {% elif 'fail' in (oracle_log.stdout_lines | join(' ') | lower) %}
      not ok
      {% elif 'exception' in (oracle_log.stdout_lines | join(' ') | lower) %}
      not ok
      {% else %}
      ok
      {% endif %}

- name: Append logs to /tmp/all_logs_collected.txt
  ansible.builtin.shell: |
    echo -e "**Status** {{ logs_status }} " >> /tmp/all_logs_collected.txt
    if [ "{{ oracle_log.stdout_lines | default([]) | join('') }}" = "" ]; then
        echo -e "No logs collected as of {{ ansible_date_time.iso8601 }}" >> /tmp/all_logs_collected.txt
    else
        echo -e "Content of {{ oracle_log }}:" >> /tmp/all_logs_collected.txt
        echo -e "{{ oracle_log.stdout_lines | join('\n') }}" >> /tmp/all_logs_collected.txt
    fi
    echo -e "End of Content of {{ oracle_log }}\n" >> /tmp/all_logs_collected.txt
  delegate_to: localhost