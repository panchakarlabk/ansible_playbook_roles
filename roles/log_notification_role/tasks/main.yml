---
# Step 1: Collect logs and append them to a single file
- name: Daily Monitor Logs DR PE restore log status
  ansible.builtin.shell: | 
    tail "{{ log_path }}" | grep "$(date +%Y/%m/%d)"
  ignore_errors: yes  # Continue even if there are issues
  register: all_logs

- name: Append logs with CET time
  ansible.builtin.shell: |
    echo -e "**DR PE** {{ ansible_date_time.iso8601 }} CET" >> /tmp/all_logs_collected.txt
    if [ -z "{{ all_logs.stdout_lines | join('') }}" ]; then
      echo -e "No logs collected as of {{ ansible_date_time.iso8601 }} CET" >> /tmp/all_logs_collected.txt
    else
      echo -e "{{ all_logs.stdout_lines | join('\n') }}" >> /tmp/all_logs_collected.txt
    fi
    echo -e "End of logs from {{ inventory_hostname }}\n" >> /tmp/all_logs_collected.txt
  delegate_to: localhost

# Step 3: Check for errors in logs
- name: Identify errors in logs
  ansible.builtin.set_fact:
    logs_status: >-
      {% if not all_logs.stdout_lines %}
      no logs found
      {% elif 'error' in (all_logs.stdout_lines | join(' ') | lower) %}
      not ok
      {% elif 'fail' in (all_logs.stdout_lines | join(' ') | lower) %}
      not ok
      {% elif 'exception' in (all_logs.stdout_lines | join(' ') | lower) %}
      not ok
      {% else %}
      ok
      {% endif %}
  delegate_to: localhost

# Step 5: Display the collected logs
- name: Display the collected logs
  ansible.builtin.command: cat /tmp/all_logs_collected.txt
  delegate_to: localhost
  register: consolidated_logs
  run_once: true

# Step 4: Collect the status and logs for each host in a list
- name: Create a list of logs and statuses
  ansible.builtin.set_fact:
    logs_and_statuses: "{{ logs_and_statuses | default([]) + [{'host': inventory_hostname, 'logs_status': logs_status, 'logs': consolidated_logs.stdout_lines }] }}"
  delegate_to: localhost

# Step 6: Render the email template
- name: Render the email body template
  template:
    src: email_template.j2
    dest: /tmp/email_body.txt
  vars:
    consolidated_logs: "{{ logs_and_statuses }}"
  run_once: true
  delegate_to: localhost


# # Step 7: Send Daily Monitor Logs mail notification
- name: Send Daily Monitor Logs mail notification
  community.general.mail:
    host: smtp.gmail.com
    port: 587
    username: "{{ email_username }}"
    password: "{{ email_password }}"
    to: panchakarlabk@gmail.com
    subject: Daily Monitor Logs DR PE restore log status
    body: "{{ lookup('file', '/tmp/email_body.txt') }}"
  when: consolidated_logs.stdout_lines is defined 
  run_once: true
  delegate_to: localhost



